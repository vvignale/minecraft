COMPLETE/INCOMPLETE

Retries used: NONE (2 extra retries left)

[ ] Completed a design check
[ ] Participated in playtesting

Common Engine Requirements
========================================
[ ] Camera or graphics object supports view frustum culling of axis-aligned bounding boxes

Voxel Engine Requirements
========================================
[ ] Collision detection and sliding response with collided blocks for arbitrary size axis-asligned bounding boxes
[ ] Per-chunk Vertex Buffer Objects

Game Requirements
========================================
[ ] Movement and view controls must the same as warmup (including gravity and jumping)
[ ] The world must consists of a 10x2x10 grid of size C = 32 chunks
[ ] The game must run at 40+ FPS on department machines: this requirement overrides the standard 30+ FPS requirement

Global requirements
========================================
[ ] Top-level handin directory contains a Qt project file, a README, and an INSTRUCTIONS file
[ ] README has a copy of the rubric with explanations of how to verify requirements
[ ] README documents any known bugs
[ ] README indicates number of hours taken
[ ] INSTRUCTIONS contains all information needed to play the game
[ ] Engine and game code logically separated
[ ] Engine code well designed
[ ] Game code well designed
[ ] Runs on department machines
[ ] Does not crash
[ ] Works at 800x600 and fullscreen resolutions
[ ] Runs at 30+ UPS and never dips below 20 UPS unless indicated in the specific handout


Engine Requirements: 
Analytic voxel based raycasting: Can be seen in voxel manager. The call to raycast starts in minecraft world's onTick() method.

Automated chunk streaming: minecraft world calls minecraft voxel manager's updatePlayerBuffer() that finds where the player is in the world and updates the chunks on screen as necessary, loading and unloading. 

In voxel manager you can see that the initialization of new chunks is spread over multiple frames in onTick().

Game requirements: 

Addition and removal of blocks: You can see the targeted block at all times by the red face (ray starts from inside player so sometimes a little tricky to target close items). Press 'E' on targeted block to add, 'Q' to remove. VBOs are updated in voxel manager's add and remove block methods. 

Chunk streaming: in minecraft voxel manager you can see that every time a player changes chunks it updates to get chunks within 2 units of current chunk in updatePlayerBuffer(). 

Unloading chunks: also found in updatePlayerBuffer(). 

Enemies: There are cows that upon touching will kill you. They surround the golden blocks that you are trying to collect and guard it. They collide with the world. 

Press n to restart game. 

There are 3 screens. 



Bugs: 
Loading in new chunks causes slight jittering. I'm not sure why because loading is only of what's necessary and is spread over multiple frames. 

Hours: 
~25/forever


